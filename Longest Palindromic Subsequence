#include<bits/stdc++.h>
using namespace std;
int t[30][30];
int LPS(string x, string y, int m, int n)
{

	for(int i=0; i<m+1; i++)
	{
		for(int j=0; j<n+1; j++)
		{
			if(i==0 || j==0)
				t[i][j]=0;
			else if(x[i-1]==y[j-1])
				t[i][j]=t[i-1][j-1]+1;
			else
				t[i][j]=max(t[i-1][j], t[i][j-1]);
		}
	}
	return t[m][n];
}
int main()
{
	string x, y;
	cin>>x;
	y=x;
    reverse(y.begin(), y.end());
	int m=x.length(), n=y.length();
	int len = LPS(x, y, m, n);
	cout<<"Length of longest palindromic subsequence is:"<<len;
	return 0;
}
